<% provide(:title, 'API') %>
<h1>API</h1>
<p>For times when you cannot make it in person to our convenient Canal St. location, we offer our integers via API as well.</p>

<h2>API Methods</h2>
<h3>New Integer</h3>
<p>To get a new CSInteger, simply send a <code>POST</code> request to <code>/integer</code>, with a <code>format</code> parameter:</p>

<pre>curl -v -X POST -d format=json http://<%= request.host_with_port -%>/integer</pre>

<p>Look for your integer in the response body:</p>

<pre>
HTTP/1.1 201 Created
Location: http://<%= request.host_with_port -%>/integer/231461712866459648
Content-Type: application/json; charset=utf-8

{
  "cs_integer":
  {
    "id":231461712866459648,
    "description":"A fashionable integer #231461712866459648 as used by Leonardo DiCaprio on Twitter",
    "celebrity_name":"Leonardo DiCaprio",
    "celebrity_screen_name":"LeoDiCaprio",
    "origin_url":"http://twitter.com/LeoDiCaprio/status/231461712866459648"
  }
}
</pre>
<p>Acceptable formats are <code>JSON</code> and <code>XML</code>.</p>

<h3>Verify Integer</h3>
<p>To view the details of an existing CSInteger, send a <code>GET</code> request to <code>/integer/:id(.:format) </code></p>
<pre>curl -v http://<%= request.host_with_port -%>/integer/231904517690650624.json</pre>
<p>The response will contain all the details of the CSInteger:</p>
<pre>
HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8

{
  "cs_integer":
  {
    "id":231904517690650624,
    "description":"A dashing integer #231904517690650624 as used by Neil Patrick Harris on Twitter",
    "celebrity_name":"Neil Patrick Harris",
    "celebrity_screen_name":"ActuallyNPH",
    "origin_url":"http://twitter.com/ActuallyNPH/status/231904517690650624"
  }
}
</pre>
<p>Beware of counterfeits! If the id is invalid, you will get the following error message:</p>
<pre>
  TODO
</pre>

<p>Acceptable formats are <code>JSON</code> and <code>XML</code>.</p>
